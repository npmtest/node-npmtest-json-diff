{"/home/travis/build/npmtest/node-npmtest-json-diff/test.js":"/* istanbul instrument in package npmtest_json_diff */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-json-diff/lib.npmtest_json_diff.js":"/* istanbul instrument in package npmtest_json_diff */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_json_diff = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_json_diff = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-json-diff/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-json-diff && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_json_diff */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_json_diff\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_json_diff.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_json_diff.rollup.js'] =\n            local.assetsDict['/assets.npmtest_json_diff.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_json_diff.__dirname + '/lib.npmtest_json_diff.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-json-diff/node_modules/json-diff/lib/index.js":"// Generated by IcedCoffeeScript 1.3.3f\n(function() {\n  var SequenceMatcher, arrayDiff, colorize, descalarize, diff, diffScore, diffString, diffWithScore, extendedTypeOf, findMatchingObject, isScalar, isScalarized, objectDiff, scalarize,\n    __hasProp = {}.hasOwnProperty;\n\n  SequenceMatcher = require('difflib').SequenceMatcher;\n\n  extendedTypeOf = require('./util').extendedTypeOf;\n\n  colorize = require('./colorize').colorize;\n\n  isScalar = function(obj) {\n    return typeof obj !== 'object';\n  };\n\n  objectDiff = function(obj1, obj2) {\n    var change, key, keys1, keys2, result, score, subscore, value1, value2, _ref, _ref1;\n    result = {};\n    score = 0;\n    keys1 = Object.keys(obj1);\n    keys2 = Object.keys(obj2);\n    for (key in obj1) {\n      if (!__hasProp.call(obj1, key)) continue;\n      value1 = obj1[key];\n      if (!(!(key in obj2))) continue;\n      result[\"\" + key + \"__deleted\"] = value1;\n      score -= 30;\n    }\n    for (key in obj2) {\n      if (!__hasProp.call(obj2, key)) continue;\n      value2 = obj2[key];\n      if (!(!(key in obj1))) continue;\n      result[\"\" + key + \"__added\"] = value2;\n      score -= 30;\n    }\n    for (key in obj1) {\n      if (!__hasProp.call(obj1, key)) continue;\n      value1 = obj1[key];\n      if (!(key in obj2)) continue;\n      score += 20;\n      value2 = obj2[key];\n      _ref = diffWithScore(value1, value2), subscore = _ref[0], change = _ref[1];\n      if (change) result[key] = change;\n      score += Math.min(20, Math.max(-10, subscore / 5));\n    }\n    if (Object.keys(result).length === 0) {\n      _ref1 = [100 * Object.keys(obj1).length, void 0], score = _ref1[0], result = _ref1[1];\n    } else {\n      score = Math.max(0, score);\n    }\n    return [score, result];\n  };\n\n  findMatchingObject = function(item, fuzzyOriginals) {\n    var bestMatch, candidate, key, score;\n    bestMatch = null;\n    for (key in fuzzyOriginals) {\n      if (!__hasProp.call(fuzzyOriginals, key)) continue;\n      candidate = fuzzyOriginals[key];\n      if (key !== '__next') {\n        if (extendedTypeOf(item) === extendedTypeOf(candidate)) {\n          score = diffScore(item, candidate);\n          if (!bestMatch || score > bestMatch.score) {\n            bestMatch = {\n              score: score,\n              key: key\n            };\n          }\n        }\n      }\n    }\n    return bestMatch;\n  };\n\n  scalarize = function(array, originals, fuzzyOriginals) {\n    var bestMatch, item, proxy, _i, _len, _results;\n    _results = [];\n    for (_i = 0, _len = array.length; _i < _len; _i++) {\n      item = array[_i];\n      if (isScalar(item)) {\n        _results.push(item);\n      } else if (fuzzyOriginals && (bestMatch = findMatchingObject(item, fuzzyOriginals)) && bestMatch.score > 40) {\n        originals[bestMatch.key] = item;\n        _results.push(bestMatch.key);\n      } else {\n        proxy = \"__$!SCALAR\" + originals.__next++;\n        originals[proxy] = item;\n        _results.push(proxy);\n      }\n    }\n    return _results;\n  };\n\n  isScalarized = function(item, originals) {\n    return (typeof item === 'string') && (item in originals);\n  };\n\n  descalarize = function(item, originals) {\n    if (isScalarized(item, originals)) {\n      return originals[item];\n    } else {\n      return item;\n    }\n  };\n\n  arrayDiff = function(obj1, obj2, stats) {\n    var allEqual, change, i, i1, i2, item, item1, item2, j, j1, j2, op, opcodes, originals1, originals2, result, score, seq1, seq2, _i, _j, _k, _l, _len, _m, _n, _ref;\n    originals1 = {\n      __next: 1\n    };\n    seq1 = scalarize(obj1, originals1);\n    originals2 = {\n      __next: originals1.__next\n    };\n    seq2 = scalarize(obj2, originals2, originals1);\n    opcodes = new SequenceMatcher(null, seq1, seq2).getOpcodes();\n    result = [];\n    score = 0;\n    allEqual = true;\n    for (_i = 0, _len = opcodes.length; _i < _len; _i++) {\n      _ref = opcodes[_i], op = _ref[0], i1 = _ref[1], i2 = _ref[2], j1 = _ref[3], j2 = _ref[4];\n      if (op !== 'equal') allEqual = false;\n      switch (op) {\n        case 'equal':\n          for (i = _j = i1; i1 <= i2 ? _j < i2 : _j > i2; i = i1 <= i2 ? ++_j : --_j) {\n            item = seq1[i];\n            if (isScalarized(item, originals1)) {\n              if (!isScalarized(item, originals2)) {\n                throw new AssertionError(\"internal bug: isScalarized(item, originals1) != isScalarized(item, originals2) for item \" + (JSON.stringify(item)));\n              }\n              item1 = descalarize(item, originals1);\n              item2 = descalarize(item, originals2);\n              change = diff(item1, item2);\n              if (change) {\n                result.push(['~', change]);\n                allEqual = false;\n              } else {\n                result.push([' ']);\n              }\n            } else {\n              result.push([' ', item]);\n            }\n            score += 10;\n          }\n          break;\n        case 'delete':\n          for (i = _k = i1; i1 <= i2 ? _k < i2 : _k > i2; i = i1 <= i2 ? ++_k : --_k) {\n            result.push(['-', descalarize(seq1[i], originals1)]);\n            score -= 5;\n          }\n          break;\n        case 'insert':\n          for (j = _l = j1; j1 <= j2 ? _l < j2 : _l > j2; j = j1 <= j2 ? ++_l : --_l) {\n            result.push(['+', descalarize(seq2[j], originals2)]);\n            score -= 5;\n          }\n          break;\n        case 'replace':\n          for (i = _m = i1; i1 <= i2 ? _m < i2 : _m > i2; i = i1 <= i2 ? ++_m : --_m) {\n            result.push(['-', descalarize(seq1[i], originals1)]);\n            score -= 5;\n          }\n          for (j = _n = j1; j1 <= j2 ? _n < j2 : _n > j2; j = j1 <= j2 ? ++_n : --_n) {\n            result.push(['+', descalarize(seq2[j], originals2)]);\n            score -= 5;\n          }\n      }\n    }\n    if (allEqual || (opcodes.length === 0)) {\n      result = void 0;\n      score = 100;\n    } else {\n      score = Math.max(0, score);\n    }\n    return [score, result];\n  };\n\n  diffWithScore = function(obj1, obj2) {\n    var type1, type2;\n    type1 = extendedTypeOf(obj1);\n    type2 = extendedTypeOf(obj2);\n    if (type1 === type2) {\n      switch (type1) {\n        case 'object':\n          return objectDiff(obj1, obj2);\n        case 'array':\n          return arrayDiff(obj1, obj2);\n      }\n    }\n    if (obj1 !== obj2) {\n      return [\n        0, {\n          __old: obj1,\n          __new: obj2\n        }\n      ];\n    } else {\n      return [100, void 0];\n    }\n  };\n\n  diff = function(obj1, obj2) {\n    var change, score, _ref;\n    _ref = diffWithScore(obj1, obj2), score = _ref[0], change = _ref[1];\n    return change;\n  };\n\n  diffScore = function(obj1, obj2) {\n    var change, score, _ref;\n    _ref = diffWithScore(obj1, obj2), score = _ref[0], change = _ref[1];\n    return score;\n  };\n\n  diffString = function(obj1, obj2, options) {\n    return colorize(diff(obj1, obj2), options);\n  };\n\n  module.exports = {\n    diff: diff,\n    diffString: diffString\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-json-diff/node_modules/json-diff/lib/util.js":"// Generated by IcedCoffeeScript 1.3.3f\n(function() {\n  var extendedTypeOf;\n\n  extendedTypeOf = function(obj) {\n    var result;\n    result = typeof obj;\n    if (!(obj != null)) {\n      return 'null';\n    } else if (result === 'object' && obj.constructor === Array) {\n      return 'array';\n    } else {\n      return result;\n    }\n  };\n\n  module.exports = {\n    extendedTypeOf: extendedTypeOf\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-json-diff/node_modules/json-diff/lib/colorize.js":"// Generated by IcedCoffeeScript 1.3.3f\n(function() {\n  var Theme, color, colorize, colorizeToArray, colorizeToCallback, extendedTypeOf, subcolorizeToCallback,\n    __hasProp = {}.hasOwnProperty;\n\n  color = require('cli-color');\n\n  extendedTypeOf = require('./util').extendedTypeOf;\n\n  Theme = {\n    ' ': function(s) {\n      return s;\n    },\n    '+': color.green,\n    '-': color.red\n  };\n\n  subcolorizeToCallback = function(key, diff, output, color, indent) {\n    var item, looksLikeDiff, m, op, prefix, subindent, subkey, subvalue, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;\n    prefix = key ? \"\" + key + \": \" : '';\n    subindent = indent + '  ';\n    switch (extendedTypeOf(diff)) {\n      case 'object':\n        if (('__old' in diff) && ('__new' in diff) && (Object.keys(diff).length === 2)) {\n          subcolorizeToCallback(key, diff.__old, output, '-', indent);\n          return subcolorizeToCallback(key, diff.__new, output, '+', indent);\n        } else {\n          output(color, \"\" + indent + prefix + \"{\");\n          for (subkey in diff) {\n            if (!__hasProp.call(diff, subkey)) continue;\n            subvalue = diff[subkey];\n            if (m = subkey.match(/^(.*)__deleted$/)) {\n              subcolorizeToCallback(m[1], subvalue, output, '-', subindent);\n            } else if (m = subkey.match(/^(.*)__added$/)) {\n              subcolorizeToCallback(m[1], subvalue, output, '+', subindent);\n            } else {\n              subcolorizeToCallback(subkey, subvalue, output, color, subindent);\n            }\n          }\n          return output(color, \"\" + indent + \"}\");\n        }\n        break;\n      case 'array':\n        output(color, \"\" + indent + prefix + \"[\");\n        looksLikeDiff = true;\n        for (_i = 0, _len = diff.length; _i < _len; _i++) {\n          item = diff[_i];\n          if ((extendedTypeOf(item) !== 'array') || !((item.length === 2) || ((item.length === 1) && (item[0] === ' '))) || !(typeof item[0] === 'string') || item[0].length !== 1 || !((_ref = item[0]) === ' ' || _ref === '-' || _ref === '+' || _ref === '~')) {\n            looksLikeDiff = false;\n          }\n        }\n        if (looksLikeDiff) {\n          for (_j = 0, _len1 = diff.length; _j < _len1; _j++) {\n            _ref1 = diff[_j], op = _ref1[0], subvalue = _ref1[1];\n            if (op === ' ' && !(subvalue != null)) {\n              output(' ', subindent + '...');\n            } else {\n              if (op !== ' ' && op !== '~' && op !== '+' && op !== '-') {\n                throw new Error(\"Unexpected op '\" + op + \"' in \" + (JSON.stringify(diff, null, 2)));\n              }\n              if (op === '~') op = ' ';\n              subcolorizeToCallback('', subvalue, output, op, subindent);\n            }\n          }\n        } else {\n          for (_k = 0, _len2 = diff.length; _k < _len2; _k++) {\n            subvalue = diff[_k];\n            subcolorizeToCallback('', subvalue, output, color, subindent);\n          }\n        }\n        return output(color, \"\" + indent + \"]\");\n      default:\n        return output(color, indent + prefix + JSON.stringify(diff));\n    }\n  };\n\n  colorizeToCallback = function(diff, output) {\n    return subcolorizeToCallback('', diff, output, ' ', '');\n  };\n\n  colorizeToArray = function(diff) {\n    var output;\n    output = [];\n    colorizeToCallback(diff, function(color, line) {\n      return output.push(\"\" + color + line);\n    });\n    return output;\n  };\n\n  colorize = function(diff, options) {\n    var output;\n    if (options == null) options = {};\n    output = [];\n    colorizeToCallback(diff, function(color, line) {\n      var _ref, _ref1, _ref2;\n      if ((_ref = options.color) != null ? _ref : true) {\n        return output.push(((_ref1 = (_ref2 = options.theme) != null ? _ref2[color] : void 0) != null ? _ref1 : Theme[color])(\"\" + color + line) + \"\\n\");\n      } else {\n        return output.push(\"\" + color + line + \"\\n\");\n      }\n    });\n    return output.join('');\n  };\n\n  module.exports = {\n    colorize: colorize,\n    colorizeToArray: colorizeToArray,\n    colorizeToCallback: colorizeToCallback\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-json-diff/node_modules/json-diff/bin/json-diff.js":"#!/usr/bin/env node\nrequire('../lib/cli')(process.argv.slice(2));\n","/home/travis/build/npmtest/node-npmtest-json-diff/node_modules/json-diff/lib/cli.js":"// Generated by IcedCoffeeScript 1.3.3f\n(function() {\n  var colorize, diff, fs, iced, tty, __iced_k, __iced_k_noop,\n    __slice = [].slice;\n\n  iced = {\n    Deferrals: (function() {\n\n      function _Class(_arg) {\n        this.continuation = _arg;\n        this.count = 1;\n        this.ret = null;\n      }\n\n      _Class.prototype._fulfill = function() {\n        if (!--this.count) return this.continuation(this.ret);\n      };\n\n      _Class.prototype.defer = function(defer_params) {\n        var _this = this;\n        ++this.count;\n        return function() {\n          var inner_params, _ref;\n          inner_params = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          if (defer_params != null) {\n            if ((_ref = defer_params.assign_fn) != null) {\n              _ref.apply(null, inner_params);\n            }\n          }\n          return _this._fulfill();\n        };\n      };\n\n      return _Class;\n\n    })(),\n    findDeferral: function() {\n      return null;\n    }\n  };\n  __iced_k = __iced_k_noop = function() {};\n\n  fs = require('fs');\n\n  tty = require('tty');\n\n  diff = require('./index').diff;\n\n  colorize = require('./colorize').colorize;\n\n  module.exports = function(argv) {\n    var data1, data2, err1, err2, json1, json2, options, result, ___iced_passed_deferral, __iced_deferrals, __iced_k,\n      _this = this;\n    __iced_k = __iced_k_noop;\n    ___iced_passed_deferral = iced.findDeferral(arguments);\n    options = require('dreamopt')([\"Usage: json-diff [-vjC] first.json second.json\", \"Arguments:\", \"  first.json              Old file #var(file1) #required\", \"  second.json             New file #var(file2) #required\", \"General options:\", \"  -v, --verbose           Output progress info\", \"  -C, --[no-]color        Colored output\", \"  -j, --raw-json          Display raw JSON encoding of the diff #var(raw)\"], argv);\n    if (options.verbose) {\n      process.stderr.write(\"\" + (JSON.stringify(options, null, 2)) + \"\\n\");\n    }\n    if (options.verbose) process.stderr.write(\"Loading files...\\n\");\n    (function(__iced_k) {\n      __iced_deferrals = new iced.Deferrals(__iced_k, {\n        parent: ___iced_passed_deferral,\n        filename: \"lib/cli.iced\",\n        funcname: \"exports\"\n      });\n      fs.readFile(options.file1, 'utf8', __iced_deferrals.defer({\n        assign_fn: (function() {\n          return function() {\n            err1 = arguments[0];\n            return data1 = arguments[1];\n          };\n        })(),\n        lineno: 24\n      }));\n      fs.readFile(options.file2, 'utf8', __iced_deferrals.defer({\n        assign_fn: (function() {\n          return function() {\n            err2 = arguments[0];\n            return data2 = arguments[1];\n          };\n        })(),\n        lineno: 25\n      }));\n      __iced_deferrals._fulfill();\n    })(function() {\n      var _ref;\n      if (err1) throw err1;\n      if (err2) throw err2;\n      if (options.verbose) process.stderr.write(\"Parsing old file...\\n\");\n      json1 = JSON.parse(data1);\n      if (options.verbose) process.stderr.write(\"Parsing new file...\\n\");\n      json2 = JSON.parse(data2);\n      if (options.verbose) process.stderr.write(\"Running diff...\\n\");\n      result = diff(json1, json2);\n      if ((_ref = options.color) == null) {\n        options.color = tty.isatty(process.stdout.fd);\n      }\n      if (options.raw) {\n        if (options.verbose) process.stderr.write(\"Serializing JSON output...\\n\");\n        return process.stdout.write(JSON.stringify(result, null, 2));\n      } else {\n        if (options.verbose) process.stderr.write(\"Producing colored output...\\n\");\n        return process.stdout.write(colorize(result, {\n          color: options.color\n        }));\n      }\n    });\n  };\n\n}).call(this);\n"}